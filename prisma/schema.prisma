// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id    String     @id @default(uuid())
  email String  @unique
  fullName  String
  password  String
  roles     String[]  @default(["user"])
  isActive Boolean @default(true)

  lastUpdateById String?
  lastUpdateBy User? @relation("AdminUsers",fields: [lastUpdateById],references: [id])
  users User[] @relation("AdminUsers")
  items Item[]
  list List[]
}
model Item {
  id    String     @id @default(uuid())
  name  String
  //quantity Int
  quantityUnits String?
  user User @relation(fields:[userId],references:[id])
  userId String
  lists ListItem[]
  @@index(fields: [userId])
}

model List {
  id    String     @id @default(uuid())
  name  String
  user User @relation(fields:[userId],references:[id])
  userId String
  @@index(fields: [userId]) 
  items ListItem[]
}

model ListItem {
  id String @unique @default(uuid())
  quantity Float  
  completed Boolean @default(false)
  //Relaciones
  item Item @relation(fields: [itemId], references:[id] )
  itemId String
  list List @relation(fields: [listId], references:[id])
  listId String
  @@id([itemId, listId])
}